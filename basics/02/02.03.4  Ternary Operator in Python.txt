Ternary operators are also known as conditional expressions
evaluate something based on a condition being true or false
testing a condition in a single line replacing the multiline
if-else making the code compact.


Syntax : 

[on_true] if [expression] else [on_false] 


###############################################################################

					Simple Method to use ternary operator:


# Program to demonstrate conditional operator
>>> a = 20
>>> b = 10

# Copy value of a in max if a > b else copy b
>>> bigger = a if a>b else b
>>>
>>> print(bigger)
20


###############################################################################
					Direct Method by using tuples

# Use tuple for selecting an item
# (if_test_false,if_test_true)[test]
# if [a<b] is true it return 1, so element with 1 index will print
# else if [a<b] is false it return 0, so element with 0 index will print

>>> a,b = 20,10
>>> print((b,a)[a>b])     # (if_test_false,if_test_true)[test]  
20




#################################################################################
				 Direct Method by using Dictionary

# Use Dictionary for selecting an item
# if [a < b] is true then value of True key will print
# elif [a<b] is false then value of False key will print


>>> a,b = 20,10
>>> print({True:a, False:b} [a>b])
20

#################################################################################
